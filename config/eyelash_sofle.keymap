#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Windows {
            bindings = <
&kp ESC          &kp N1             &kp N2        &kp N3        &kp N4            &kp N5       &bt BT_SEL 2  &kp N6     &kp N7    &kp N8               &kp N9       &kp N0       &kp BACKSPACE
&kp TAB          &kp Q              &kp W         &kp E         &kp R             &kp T        &bt BT_SEL 0  &kp Y      &kp U     &kp I                &kp O        &kp P        &kp BSLH
&lt 2 CAPS       &kp A              &kp S         &kp D         &kp F             &kp G        &bt BT_PRV    &kp H      &kp J     &kp K                &kp L        &kp SEMI     &kp APOS
&kp LSHFT        &kp Z              &kp X         &kp C         &kp V             &kp B        &bt BT_NXT    &kp N      &kp M     &kp COMMA            &kp DOT      &kp FSLH     &kp ENTER
&kp PRINTSCREEN  &lt 3 PRINTSCREEN  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp SPACE    &to 1         &kp SPACE  &kp RALT  &lt 3 RIGHT_CONTROL  &lt 2 MINUS  &lt 4 EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LC(EQUAL) LC(MINUS)>;
            display-name = "Windows";
        };

        Mac {
            bindings = <
&kp ESC          &kp N1             &kp N2     &kp N3    &kp N4    &kp N5       &bt BT_SEL 2  &kp N6     &kp N7    &kp N8     &kp N9       &kp N0       &kp BSPC
&kp TAB          &kp Q              &kp W      &kp E     &kp R     &kp T        &bt BT_SEL 0  &kp Y      &kp U     &kp I      &kp O        &kp P        &kp BSLH
&lt 2 CAPS       &kp A              &kp S      &kp D     &kp F     &kp G        &bt BT_PRV    &kp H      &kp J     &kp K      &kp L        &kp SEMI     &kp SQT
&kp LSHFT        &kp Z              &kp X      &kp C     &kp V     &kp B        &bt BT_NXT    &kp N      &kp M     &kp COMMA  &kp DOT      &kp FSLH     &kp ENTER
&kp PRINTSCREEN  &lt 3 PRINTSCREEN  &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE    &to 0         &kp SPACE  &kp CAPS  &mo 3      &lt 2 MINUS  &lt 4 EQUAL
            >;

            display-name = "Mac";
            sensor-bindings = <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
        };

        Function {
            bindings = <
&kp GRAVE       &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6   &kp F7    &kp F8          &kp F9          &kp F10          &kp DEL
&kp CAPS        &kp C_VOL_DN     &kp UP_ARROW    &kp C_VOL_UP     &kp PAGE_UP      &kp HOME           &mmv MOVE_DOWN   &kp F11  &kp F12   &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans
&trans          &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp END            &mmv MOVE_LEFT   &trans   &mkp MB4  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&kp LEFT_SHIFT  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &trans   &mkp MB5  &trans          &trans          &trans           &trans
&kp C_MUTE      &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans   &trans    &trans          &trans          &trans
            >;

            display-name = "Function";
            sensor-bindings = <&scroll_encoder>;
        };

        Number {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans    &bl BL_INC    &trans  &trans  &trans  &kp FSLH  &kp F10  &kp BSPC
&trans  &trans        &trans        &trans        &trans        &trans    &bl BL_DEC    &trans  &trans  &kp N7  &kp N8    &kp N9   &kp MINUS
&trans  &trans        &trans        &trans        &trans        &trans    &bl BL_CYCLE  &trans  &trans  &kp N4  &kp N5    &kp N6   &kp EQUAL
&trans  &trans        &trans        &bt BT_CLR    &trans        &trans    &bl BL_CYCLE  &trans  &trans  &kp N1  &kp N2    &kp N3   &kp RET
&trans  &trans        &trans        &trans        &trans        &trans    &bl BL_TOG    &trans  &trans  &trans  &kp N0    &kp DOT
            >;

            display-name = "Number";
            sensor-bindings = <&scroll_encoder>;
        };

        Extra {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_INC    &trans  &trans  &trans  &kp MINUS         &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_DEC    &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RBKT   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_CYCLE  &trans  &trans  &trans  &trans            &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_CYCLE  &trans  &trans  &trans  &trans            &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_TOG    &trans  &trans  &trans  &trans            &trans
            >;

            display-name = "Extra";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
